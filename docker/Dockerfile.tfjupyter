ARG TF_IMAGE=2.11.0-jupyter
FROM tensorflow/tensorflow:$TF_IMAGE

#USER root
# postgres
EXPOSE 5432
# mongo
EXPOSE 27017
# jupyter
EXPOSE 8888


RUN apt-get update && \
    apt-get install -y \
    libgeos++-dev \
    libaec0 \
    libaec-dev \
    wget \
    gfortran \
    cmake

# Install ECCode from Source for reading Grib forecast files
RUN mkdir /home/eccode
WORKDIR /home/eccode
#RUN wget https://confluence.ecmwf.int/download/attachments/45757960/eccodes-2.28.0-Source.tar.gz
COPY docker/files/eccodes-2.28.0-Source.tar.gz /home/eccode/eccodes-2.28.0-Source.tar.gz
RUN tar -xzvf eccodes-2.28.0-Source.tar.gz

RUN mkdir /home/eccode/build
WORKDIR /home/eccode/build
RUN pwd

RUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../eccodes-2.28.0-Source
RUN make
#RUN ctest
RUN make install

#RUN /usr/bin/python3 -m pip install --upgrade pip

COPY docker/requirements.txt /home/requirements.txt
RUN pip install -r /home/requirements.txt

COPY us_elec /home/us_elec
WORKDIR /home/us_elec
RUN pip install -e .

COPY docker/files/00start.py /root/.ipython/profile_default/startup/00start.py
COPY docker/files/ipython_config.py /root/.ipython/profile_default/ipython_config.py

RUN export JUPYTER_CONFIG_DIR=/tf/.jupyter

RUN export PYTHON_PATH="$PYTHON_PATH:/tf"

RUN mkdir /tf/us_elec
WORKDIR /tf

CMD ["/usr/local/bin/jupyter", \
     "notebook", \
     "--ip", "0.0.0.0", \
     "--port", "8888", \
     "--no-browser", \
     "--allow-root", \
     "--NotebookApp.allow_origin_pat=https://.*vscode-cdn\\.net", \
     "--notebook-dir", "/tf/"]